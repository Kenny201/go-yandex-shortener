// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/shortener/shortener.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	entity "github.com/Kenny201/go-yandex-shortener.git/internal/domain/shortener/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockShortenerRepository is a mock of ShortenerRepository interface.
type MockShortenerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockShortenerRepositoryMockRecorder
}

// MockShortenerRepositoryMockRecorder is the mock recorder for MockShortenerRepository.
type MockShortenerRepositoryMockRecorder struct {
	mock *MockShortenerRepository
}

// NewMockShortenerRepository creates a new mock instance.
func NewMockShortenerRepository(ctrl *gomock.Controller) *MockShortenerRepository {
	mock := &MockShortenerRepository{ctrl: ctrl}
	mock.recorder = &MockShortenerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortenerRepository) EXPECT() *MockShortenerRepositoryMockRecorder {
	return m.recorder
}

// CheckHealth mocks base method.
func (m *MockShortenerRepository) CheckHealth() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckHealth")
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckHealth indicates an expected call of CheckHealth.
func (mr *MockShortenerRepositoryMockRecorder) CheckHealth() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckHealth", reflect.TypeOf((*MockShortenerRepository)(nil).CheckHealth))
}

// Create mocks base method.
func (m *MockShortenerRepository) Create(url *entity.URL) (*entity.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", url)
	ret0, _ := ret[0].(*entity.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockShortenerRepositoryMockRecorder) Create(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockShortenerRepository)(nil).Create), url)
}

// CreateList mocks base method.
func (m *MockShortenerRepository) CreateList(userID interface{}, urls []*entity.URLItem) ([]*entity.URLItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateList", userID, urls)
	ret0, _ := ret[0].([]*entity.URLItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateList indicates an expected call of CreateList.
func (mr *MockShortenerRepositoryMockRecorder) CreateList(userID, urls interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateList", reflect.TypeOf((*MockShortenerRepository)(nil).CreateList), userID, urls)
}

// Get mocks base method.
func (m *MockShortenerRepository) Get(shortKey string) (*entity.URL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", shortKey)
	ret0, _ := ret[0].(*entity.URL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockShortenerRepositoryMockRecorder) Get(shortKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockShortenerRepository)(nil).Get), shortKey)
}

// GetAll mocks base method.
func (m *MockShortenerRepository) GetAll(userID string) ([]*entity.URLItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", userID)
	ret0, _ := ret[0].([]*entity.URLItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockShortenerRepositoryMockRecorder) GetAll(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockShortenerRepository)(nil).GetAll), userID)
}
